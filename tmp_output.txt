Script started on 2025-03-06 13:31:34-03:00 [TERM="xterm-256color" TTY="/dev/pts/7" COLUMNS="63" LINES="11"]
[?2004h]0;btms@DESK-BTMS: ~/github_projects/estrategias_binarias[01;32mbtms@DESK-BTMS[00m:[01;34m~/github_projects/estrategias_binarias[00m$ [7mpython -[27m[7mm[27m[7m deriv.main[27m[A]0;btms@DESK-BTMS: ~/github_projects/estrategias_binarias[01;32mbtms@DESK-BTMS[00m:[01;34m~/github_projects/estrategias_binarias[00m$ python -m deriv.main
[?2004lIniciando a interface gr√°fica...
Iniciando conex√£o com a API...
Conex√£o ativa. Tipo de conta: DEMO
Bot√£o Comprar CALL clicado!
2025-03-06 13:32:04,825 Task exception was never retrieved
future: <Task finished name='Task-23' coro=<DerivedBot.run() done, defined at /home/btms/github_projects/estrategias_binarias/deriv/autobots.py:16> exception=ResponseError('Unrecognised request')>
Traceback (most recent call last):
  File "/home/btms/github_projects/estrategias_binarias/deriv/autobots.py", line 17, in run
    if await self.params.is_valid_combination("derived", self.trade_type):
  File "/home/btms/github_projects/estrategias_binarias/deriv/trade_parameters.py", line 21, in is_valid_combination
    response = await self.conn.send({"available_contracts": 1, "market": market_type})  # Usar send
  File "/home/btms/github_projects/estrategias_binarias/deriv/connect.py", line 37, in send
    return await self.api.send(request)
  File "/home/btms/github_projects/estrategias_binarias/.venv/lib/python3.10/site-packages/deriv_api/deriv_api.py", line 264, in send
    response = await response_future
deriv_api.errors.ResponseError: ResponseError: Unrecognised request
^C
^CTraceback (most recent call last):
  File "/usr/lib/python3.10/asyncio/runners.py", line 44, in run
    return loop.run_until_complete(main)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 636, in run_until_complete
    self.run_forever()
  File "/usr/lib/python3.10/asyncio/base_events.py", line 603, in run_forever
    self._run_once()
  File "/usr/lib/python3.10/asyncio/base_events.py", line 1871, in _run_once
    event_list = self._selector.select(timeout)
  File "/usr/lib/python3.10/selectors.py", line 469, in select
    fd_event_list = self._selector.poll(timeout, max_ev)
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/btms/github_projects/estrategias_binarias/deriv/main.py", line 15, in <module>
    asyncio.run(main())
  File "/usr/lib/python3.10/asyncio/runners.py", line 47, in run
    _cancel_all_tasks(loop)
  File "/usr/lib/python3.10/asyncio/runners.py", line 63, in _cancel_all_tasks
    loop.run_until_complete(tasks.gather(*to_cancel, return_exceptions=True))
  File "/usr/lib/python3.10/asyncio/base_events.py", line 636, in run_until_complete
    self.run_forever()
  File "/usr/lib/python3.10/asyncio/base_events.py", line 603, in run_forever
    self._run_once()
  File "/usr/lib/python3.10/asyncio/base_events.py", line 1871, in _run_once
    event_list = self._selector.select(timeout)
  File "/usr/lib/python3.10/selectors.py", line 469, in select
    fd_event_list = self._selector.poll(timeout, max_ev)
KeyboardInterrupt

[?2004h]0;btms@DESK-BTMS: ~/github_projects/estrategias_binarias[01;32mbtms@DESK-BTMS[00m:[01;34m~/github_projects/estrategias_binarias[00m$ exit
[?2004lexit

Script done on 2025-03-06 13:32:18-03:00 [COMMAND_EXIT_CODE="130"]
